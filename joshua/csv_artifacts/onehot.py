#!/usr/bin/env python3

# "TRIP_ID","CALL_TYPE","ORIGIN_CALL","ORIGIN_STAND","TAXI_ID","TIMESTAMP","DAY_TYPE","MISSING_DATA","POLYLINE"

from datetime import datetime

def getPolyTime(polyline):
  count = polyline.count('[')
  if count == 0:
    return 0
  else:
    return (count - 1) * 15

# I am too lazy to setup arguments so here you go
training = 1
taxi = 1
outName = 'outfile.csv'

# Define if we are converting training or not
if training == 1:
  fileName = 'train.csv'
else:
  fileName = 'test_public.csv'

flag = 0
with open(fileName, 'r') as f:
  outFile = open(outName, 'w')

  header = ""
  for i in range(1, 67):
    header += "CALL_TYPE" + str(i) + ","

  if taxi == 1:
    for i in range(1, 451):
      header += "TAXI_ID" + str(i) + ","

  header += "JANUARY,FEBRUARY,MARCH,APRIL,MAY,JUNE,JULY,AUGUST,SEPTEMBER,OCTOBER,NOVEMBER,DECEMBER,"

  header += "MONDAY,TUESDAY,WEDNESDAY,THURSDAY,FRIDAY,SATURDAY,SUNDAY,"

  header += "TIME,"

  header += "DAY_TYPE1,DAYTYPE2,DAYTYPE3"
  
  # Setup headers and columns
  if training == 1:
    columns = 8
    header += ',' + "TRIP_TIME"
  else:
    columns = 7

  outFile.write(header + '\n')
  
  for i in f:
    # skip first line
    if flag == 0:
      flag = 1;
    else:
      line = i.strip().upper().replace('"', '').split(',', columns)
      if line[7] == 'FALSE' or training != 1:
        # calculate polyline time
        if training == 1:
          timeTaken = (getPolyTime(line[8]))
  
        # Date object
        date = datetime.utcfromtimestamp(int(line[5]))
        minutes = date.minute + date.hour * 60
#        print(minutes)

        monthzero = [0] * 12
        monthzero[date.month - 1] = 1
        monthData = ""
        for i in monthzero:
          monthData += str(i) + ','

        weekzero = [0] * 7
        weekzero[date.weekday() - 1] = 1
        weekData = ""
        for i in weekzero:
          weekData += str(i) + ','
  
        # Make day types into numbers
        if line[6] == 'A':
          dayType = 0
          dayData = "1,0,0"
        elif line[6] == 'B':
          dayType = 1
          dayData = "0,1,0"
        else:
          dayType = 2
          dayData = "0,0,1"
  
        # Make call types into values
        callzero = [0] * 66
        if line[1] == 'A':
          callType = 65
        elif line[1] == 'C':
          callType = 66
        elif line[1] == 'B':
          if line[3] == '':
            callType = 64
          else:
            callType = int(line[3])
        callzero[callType - 1] = 1
        callData = ""
        for i in callzero:
          callData += str(i) + ','

        if taxi == 1:
          taxis = [20000001,20000002,20000003,20000004,20000005,20000006,20000007,20000008,20000009,20000010,20000011,20000012,20000013,20000014,20000015,20000017,20000018,20000020,20000021,20000022,20000023,20000024,20000026,20000027,20000030,20000031,20000032,20000036,20000037,20000038,20000039,20000040,20000041,20000042,20000044,20000045,20000046,20000047,20000048,20000049,20000050,20000051,20000053,20000054,20000055,20000057,20000058,20000060,20000065,20000066,20000067,20000068,20000071,20000072,20000073,20000074,20000075,20000076,20000077,20000079,20000080,20000081,20000083,20000084,20000085,20000086,20000089,20000092,20000093,20000094,20000095,20000098,20000099,20000100,20000101,20000104,20000105,20000107,20000108,20000109,20000111,20000112,20000113,20000114,20000116,20000118,20000119,20000120,20000121,20000123,20000126,20000128,20000129,20000131,20000136,20000137,20000138,20000140,20000142,20000144,20000146,20000148,20000151,20000152,20000153,20000154,20000156,20000157,20000158,20000159,20000160,20000161,20000163,20000166,20000167,20000170,20000171,20000172,20000173,20000174,20000177,20000178,20000179,20000180,20000184,20000185,20000186,20000187,20000188,20000189,20000190,20000192,20000195,20000196,20000197,20000198,20000199,20000201,20000205,20000206,20000207,20000213,20000215,20000216,20000217,20000222,20000224,20000225,20000226,20000229,20000230,20000231,20000233,20000235,20000239,20000242,20000243,20000245,20000246,20000247,20000248,20000249,20000250,20000251,20000252,20000254,20000255,20000256,20000257,20000258,20000260,20000261,20000263,20000264,20000267,20000268,20000269,20000271,20000272,20000273,20000276,20000279,20000280,20000281,20000285,20000286,20000288,20000289,20000294,20000295,20000296,20000297,20000303,20000304,20000305,20000307,20000308,20000309,20000310,20000311,20000312,20000314,20000315,20000319,20000320,20000321,20000324,20000325,20000326,20000327,20000328,20000329,20000330,20000331,20000332,20000333,20000334,20000337,20000338,20000340,20000341,20000342,20000343,20000344,20000345,20000346,20000347,20000349,20000351,20000352,20000353,20000356,20000359,20000360,20000361,20000362,20000363,20000364,20000367,20000370,20000372,20000373,20000376,20000377,20000380,20000381,20000383,20000384,20000386,20000387,20000388,20000389,20000391,20000392,20000393,20000395,20000397,20000398,20000400,20000403,20000406,20000407,20000408,20000409,20000410,20000419,20000421,20000423,20000424,20000426,20000429,20000430,20000431,20000432,20000434,20000435,20000436,20000440,20000443,20000446,20000448,20000449,20000450,20000451,20000452,20000453,20000454,20000455,20000456,20000458,20000460,20000463,20000464,20000465,20000467,20000468,20000470,20000472,20000473,20000476,20000477,20000480,20000481,20000482,20000483,20000484,20000486,20000487,20000488,20000492,20000494,20000495,20000496,20000497,20000499,20000500,20000502,20000503,20000504,20000506,20000507,20000508,20000509,20000510,20000513,20000514,20000515,20000516,20000517,20000518,20000520,20000521,20000523,20000524,20000525,20000527,20000529,20000534,20000535,20000539,20000540,20000541,20000542,20000543,20000545,20000546,20000547,20000548,20000549,20000554,20000557,20000560,20000561,20000562,20000565,20000569,20000570,20000571,20000572,20000574,20000576,20000577,20000578,20000579,20000585,20000586,20000588,20000589,20000591,20000594,20000595,20000596,20000597,20000598,20000600,20000601,20000602,20000603,20000604,20000605,20000606,20000607,20000608,20000609,20000610,20000611,20000612,20000615,20000616,20000617,20000618,20000619,20000620,20000621,20000623,20000624,20000625,20000626,20000632,20000633,20000634,20000640,20000648,20000649,20000651,20000653,20000657,20000658,20000662,20000663,20000664,20000665,20000667,20000668,20000669,20000670,20000671,20000672,20000674,20000675,20000676,20000678,20000680,20000681,20000682,20000684,20000685,20000686,20000687,20000688,20000692,20000693,20000695,20000697,20000698,20000900,20000901,20000902,20000903,20000904,20000911,20000931,20000940,20000941,20000969,20000970,20000980,20000981]
  
          taxizero= [0] * 450
          # Taxi ID
          if line[4] == '':
            taxiId = 0
            taxizero[0] = 1
          else:
            taxiId = int(line[4])
            taxizero[taxis.index(int(line[4])) + 1] = 1
          
          taxiData = ""
          for i in taxizero:
            taxiData += str(i) + ','
        
        # Data row
        if training == 1:
          if taxi == 1:
            row = (callData + taxiData + monthData + weekData + str(minutes / 1439.0) + ',' + dayData + ',' + str(timeTaken) + '\n')
          else:
            row = (callData + monthData + weekData + str(minutes / 1439.0) + ',' + dayData + ',' + str(timeTaken) + '\n')
        else:
          if taxi == 1:
            row = (callData + taxiData + monthData + weekData + str(minutes / 1439.0) + ',' + dayData + '\n')
          else:
            row = (callData + monthData + weekData + str(minutes / 1439.0) + ',' + dayData + '\n')


        # Write out
        outFile.write(row)
